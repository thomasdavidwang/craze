type Vote @model @auth(rules: [{ allow: public }]) {
  id: ID!
  voters: [User] @manyToMany(relationName: "UserVote")
  dareID: ID! @index(name: "byDare")
  votee: ID! @index(name: "byUser")
}

type Dare @model @searchable @auth(rules: [{ allow: public }]) {
  id: ID!
  description: String
  emoji: String
  Votes: [Vote] @hasMany(indexName: "byDare", fields: ["id"])
}

type Group @model @auth(rules: [{ allow: public }]) {
  id: ID!
  description: String
  Users: [User] @hasMany(indexName: "byGroup", fields: ["id"])
}

type User @model @searchable @auth(rules: [{ allow: public }]) {
  id: ID!
  firstName: String
  lastName: String
  profilePicKey: String
  phoneNumber: AWSPhone
  email: AWSEmail! @index(name: "byEmail")
  groupID: ID @index(name: "byGroup")
  votesReceived: [Vote] @hasMany(indexName: "byUser", fields: ["id"])
  votesGiven: [Vote] @manyToMany(relationName: "UserVote")
  hasSignedUp: Boolean
}
